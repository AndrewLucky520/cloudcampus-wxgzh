# 0:Default write database connection configuration
#jdbc.write.url.default=jdbc:mysql://139.159.224.52:3306/
jdbc.write.url.default=jdbc:mysql://192.168.1.39:3306/
jdbc.write.username.default=root
jdbc.write.password.deault=Talkweb456#

# 1:Score manage write database connection configuration
#jdbc.write.url.scoreManage=jdbc:mysql://120.26.118.154:63306/
jdbc.write.url.scoreManage=jdbc:mysql://192.168.1.39:3306/
jdbc.write.username.scoreManage=root
jdbc.write.password.scoreManage=Talkweb456#

# 2:Timetable write database connection configuration
#jdbc.write.url.timetable=jdbc:mysql://120.26.118.154:63306/
jdbc.write.url.timetable=jdbc:mysql://192.168.1.39:3306/
jdbc.write.username.timetable=root
jdbc.write.password.timetable=Talkweb456#

# 3:elective write database connection configuration
#jdbc.write.url.elective=jdbc:mysql://139.159.224.52:63306/
jdbc.write.url.elective=jdbc:mysql://192.168.1.39:3306/
jdbc.write.username.elective=root
jdbc.write.password.elective=Talkweb456#

# 4:salary write database connection configuration
#jdbc.write.url.salary=jdbc:mysql://120.26.118.154:63306/
jdbc.write.url.salary=jdbc:mysql://192.168.1.39:3306/
jdbc.write.username.salary=root
jdbc.write.password.salary=Talkweb456#

# 5:teachingEvaluation write database connection configuration
#jdbc.write.url.teachingEvaluation=jdbc:mysql://120.26.118.154:63306/
jdbc.write.url.teachingEvaluation=jdbc:mysql://192.168.1.39:3306/
jdbc.write.username.teachingEvaluation=root
jdbc.write.password.teachingEvaluation=Talkweb456#

# 6:teacherEvaluation write database connection configuration
#jdbc.write.url.teacherEvaluation=jdbc:mysql://120.26.118.154:63306/
jdbc.write.url.teacherEvaluation=jdbc:mysql://192.168.1.39:3306/
jdbc.write.username.teacherEvaluation=root
jdbc.write.password.teacherEvaluation=Talkweb456#

# 7:questionnairey write database connection configuration
#jdbc.write.url.questionnaire=jdbc:mysql://120.26.118.154:63306/
jdbc.write.url.questionnaire=jdbc:mysql://192.168.1.39:3306/
jdbc.write.username.questionnaire=root
jdbc.write.password.questionnaire=Talkweb456#

# 8:repairManage write database connection configuration
#jdbc.write.url.repairManage=jdbc:mysql://120.26.118.154:63306/
jdbc.write.url.repairManage=jdbc:mysql://192.168.1.39:3306/
jdbc.write.username.repairManage=root
jdbc.write.password.repairManage=Talkweb456#

# 9:venueManage write database connection configuration
#jdbc.write.url.venueManage=jdbc:mysql://120.26.118.154:63306/
jdbc.write.url.venueManage=jdbc:mysql://192.168.1.39:3306/
jdbc.write.username.venueManage=root
jdbc.write.password.venueManage=Talkweb456#

# 10:weekWork write database connection configuration
#jdbc.write.url.weekWork=jdbc:mysql://120.26.118.154:63306/
jdbc.write.url.weekWork=jdbc:mysql://192.168.1.39:3306/
jdbc.write.username.weekWork=root
jdbc.write.password.weekWork=Talkweb456#

# 11:teachingResearch write database connection configuration
#jdbc.write.url.teachingResearch=jdbc:mysql://120.26.118.154:63306/
jdbc.write.url.teachingResearch=jdbc:mysql://192.168.1.39:3306/
jdbc.write.username.teachingResearch=root
jdbc.write.password.teachingResearch=Talkweb456#

# 12:complexquality write database connection configuration
#jdbc.write.url.complexquality=jdbc:mysql://120.26.118.154:63306/
jdbc.write.url.complexquality=jdbc:mysql://192.168.1.39:3306/
jdbc.write.username.complexquality=root
jdbc.write.password.complexquality=Talkweb456#

# 13:authority write database connection configuration
#jdbc.write.url.authority=jdbc:mysql://120.26.118.154:63306/
jdbc.write.url.authority=jdbc:mysql://192.168.1.39:3306/
jdbc.write.username.authority=root
jdbc.write.password.authority=Talkweb456#

# 14:attendance write database connection configuration
#jdbc.write.url.oneCard=jdbc:mysql://120.26.118.154:63306/
jdbc.write.url.oneCard=jdbc:mysql://192.168.1.39:3306/
jdbc.write.username.oneCard=root
jdbc.write.password.oneCard=Talkweb456#

# 15:hisCommonData write database connection configuration
#jdbc.write.url.hisCommonData=jdbc:mysql://120.26.118.154:63306/
jdbc.write.url.hisCommonData=jdbc:mysql://192.168.1.39:3306/
jdbc.write.username.hisCommonData=root
jdbc.write.password.hisCommonData=Talkweb456#


# Read database connection configuration
#jdbc.read.url.one=jdbc:mysql://120.26.42.55:63306/
jdbc.read.url.one=jdbc:mysql://192.168.1.39:3306/
jdbc.read.username.one=root
jdbc.read.password.one=Talkweb456#

#jdbc.read.url.two=jdbc:mysql://121.41.116.121:63306/
jdbc.read.url.two=jdbc:mysql://192.168.1.39:3306/
jdbc.read.username.two=root
jdbc.read.password.two=Talkweb456#

#jdbc.read.url.three=jdbc:mysql://120.26.118.154:63306/
jdbc.read.url.three=jdbc:mysql://192.168.1.39:3306/
jdbc.read.username.three=root
jdbc.read.password.three=Talkweb456#


# 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection敿
jdbc.initialSize=20
# 最小连接池数量
jdbc.minIdle=10
# 最大连接池数量
jdbc.maxActive=50

# 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁⾿
jdbc.maxWait=2000
# 有两个含义：(1) Destroy线程会检测连接的间隔时间 ;(2) testWhileIdle的判断依拿
jdbc.timeBetweenEvictionRunsMillis=28800000
# 配置一个连接在池中最小生存的时间，单位是毫秒
jdbc.minEvictableIdleTimeMillis=28800000

# 是否缓存preparedStatement，也就是PSCache(PreparedStatementCache)⾿
# PSCache对支持游标的数据库性能提升巨大，比如说oracle⾿
# 在mysql5.5以下的版本中没有PSCache功能，建议关闭掉⾿
# 嚿.5版本中使用PSCache，通过监控界面发现PSCache有缓存命中率记录，该应该是支持PSCache⾿
jdbc.poolPreparedStatements=true
# maxOpenPreparedStatements	-1	要启用PSCache，必须配置大丿，当大于0时，poolPreparedStatements自动触发修改为true⾿
# 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如譿00
jdbc.maxPoolPreparedStatementPerConnectionSize=200

# 建议配置为true，不影响性能，并且保证安全性⾿
# 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效⾿
jdbc.testWhileIdle=true

# 属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat 日志用的filter:log4j 防御sql注入的filter:wall
jdbc.filters=stat,wall

# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能⾿
jdbc.testOnBorrow=true
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
jdbc.testOnReturn=true
# 用来检测连接是否有效的sql，要求是一个查询语卿如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用⾿
jdbc.validationQuery=select 'x'
# 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效⾿
jdbc.testWhileIdle=true
# 对于长时间不使用的连接强制关长
jdbc.removeAbandoned=true
# 超过30分钟开始关闭空闲连挿 
jdbc.removeAbandonedTimeout=1800


